{"version":3,"sources":["typewriter.js","Banner.js","App.js","registerServiceWorker.js","index.js"],"names":["emoji_type","TxtType","el","toRotate","period","Object","classCallCheck","this","loopNum","parseInt","txt","tick","isDeleting","i","length","fullTxt","substring","innerHTML","concat","that","delta","Math","random","setTimeout","Banner","react_default","a","createElement","className","Component","App","elements","document","getElementsByClassName","getAttribute","JSON","parse","cells","Array","from","querySelectorAll","heart","querySelector","highlight","color","randomlySetStyle","tempColor","round","style","backgroundColor","forEach","cell","height","opacity","window","onclick","onmousewheel","Banner_Banner","alt","src","id","data-period","data-type","href","download","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"gRAAMA,EAAa,CAAC,qBAAM,eAAK,qBAAO,gBAEjBC,aACjB,SAAAA,EAAYC,EAAIC,EAAUC,GAASC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAC/BM,KAAKJ,SAAWA,EAChBI,KAAKL,GAAKA,EACVK,KAAKC,QAAU,EACfD,KAAKH,OAASK,SAASL,EAAQ,KAAO,IACtCG,KAAKG,IAAM,GACXH,KAAKI,OACLJ,KAAKK,YAAa,qDAGlB,IAAMC,EAAIN,KAAKC,QAAUD,KAAKJ,SAASW,OACjCC,EAAUR,KAAKJ,SAASU,GAE1BN,KAAKK,WACTL,KAAKG,IAAMK,EAAQC,UAAU,EAAGT,KAAKG,IAAII,OAAS,GAElDP,KAAKG,IAAMK,EAAQC,UAAU,EAAGT,KAAKG,IAAII,OAAS,GAGlDP,KAAKL,GAAGe,UAAR,uBAAAC,OAA2CX,KAAKG,IAAhD,2CAAAQ,OAA6FlB,EAAWa,GAAxG,kBAEA,IAAMM,EAAOZ,KACTa,EAAQ,IAAsB,IAAhBC,KAAKC,SAEnBf,KAAKK,aACLQ,GAAS,GAGRb,KAAKK,YAAcL,KAAKG,MAAQK,EAG1BR,KAAKK,YAA2B,KAAbL,KAAKG,MAC/BH,KAAKK,YAAa,EAClBL,KAAKC,SAAS,EACdY,EAAQ,MALRA,EAAQb,KAAKH,OACbG,KAAKK,YAAa,GAOtBW,WAAW,kBAAMJ,EAAKR,QAAQS,YCrCjBI,0LAEjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAtCaC,cCmFrBC,qMA7EX,IADA,IAAMC,EAAWC,SAASC,uBAAuB,aACxCpB,EAAI,EAAGA,EAAIkB,EAASjB,OAAQD,GAAG,EAAG,CACzC,IAAMV,EAAW4B,EAASlB,GAAGqB,aAAa,aACpC9B,EAAS2B,EAASlB,GAAGqB,aAAa,eACpC/B,GACF,IAAIF,EAAQ8B,EAASlB,GAAIsB,KAAKC,MAAMjC,GAAWC,GAGnD,IAAMiC,EAAQC,MAAMC,KAAKP,SAASQ,iBAAiB,UAC7CC,EAAQT,SAASU,cAAc,UAC/BC,EAAYX,SAASU,cAAc,cACnCE,EAAQ,CACZ,UAAU,UACV,UAAW,UAAW,UACtB,WAOIC,EAAmB,SAAAR,GACvB,IAAMS,EAAYF,EALMvB,KAAK0B,MAAsB,EAAhB1B,KAAKC,WAMxCmB,EAAMO,MAAMJ,MAAQE,EACpBH,EAAUK,MAAMC,gBAAkBH,EAClCT,EAAMa,QAAQ,SAAAC,GACZA,EAAKH,MAAMC,gBAAkBH,EAE7BK,EAAKH,MAAMI,OAAX,GAAAlC,OAVuB,GAAAG,KAAKC,SAAsB,GAUlD,KACA6B,EAAKH,MAAMK,QAVa,GAAAhC,KAAKC,SAAuB,MAcxDuB,EAAiBR,GACjBiB,OAAOC,QAAU,kBAAMV,EAAiBR,IAExCiB,OAAOE,aAAe,kBAAMX,EAAiBR,qCAY7C,OACEZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC8B,EAAD,MAEAhC,EAAAC,EAAAC,cAAA,WAASC,UAAY,8BACnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAK+B,IAAI,UAAU9B,UAAU,iBAAiB+B,IAAI,mBAEpDlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,SAAmCH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,qBAAnC,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,8BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,OAAkCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAegC,GAAG,UAAjE,IAA8EnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBiC,cAAY,OAAOC,YAAU,mFAItJrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAqCmC,KAAK,kDAAiDtC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gCACrHH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAqCmC,KAAK,sCAAqCtC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sCACzGH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAqCmC,KAAK,uCAAsCtC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAC1GH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sCAAsCmC,KAAK,aAAaC,SAAS,kBACnFvC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,YADA,YACsDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAzE7DC,cCKZoC,EAAcC,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCzEjEC,IAASC,OAAO/D,EAAAC,EAAAC,cAAC8D,EAAD,MAASzD,SAAS0D,eAAe,SDclC,WACb,GAA6C,kBAAmBlB,UAAW,CAGzE,GADkB,IAAImB,IAAIC,GAAwBtC,OAAOa,UAC3C0B,SAAWvC,OAAOa,SAAS0B,OAIvC,OAGFvC,OAAOwC,iBAAiB,OAAQ,WAC9B,IAAMvB,EAAK,GAAArD,OAAM0E,GAAN,sBAEP3B,GAiDV,SAAiCM,GAE/BwB,MAAMxB,GACHI,KAAK,SAAAqB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAM1B,KAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,KAAK,WAC7BrB,OAAOa,SAASoC,aAKpBjC,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEArEAoB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAM1B,KAAK,WACjCQ,QAAQC,IACN,+GAMJd,EAAgBC,MCzCxBkC","file":"static/js/main.0f2e2ae5.chunk.js","sourcesContent":["const emoji_type = ['‚Äçüíª','‚úèÔ∏è','‚Äçüíª', 'üëå' ];\n\nexport default class TxtType {\n    constructor(el, toRotate, period) {\n        this.toRotate = toRotate;\n        this.el = el;\n        this.loopNum = 0;\n        this.period = parseInt(period, 10) || 2000;\n        this.txt = '';\n        this.tick();\n        this.isDeleting = false;\n    }\n    tick() {\n        const i = this.loopNum % this.toRotate.length;\n        const fullTxt = this.toRotate[i];\n\n        if (this.isDeleting) {\n        this.txt = fullTxt.substring(0, this.txt.length - 1);\n        } else {\n        this.txt = fullTxt.substring(0, this.txt.length + 1);\n        }\n\n        this.el.innerHTML = `<span class=\"wrap\"> ${this.txt} <span role=\"img\" aria-label=\"emojis\"> ${emoji_type[i]}</span></span>`;\n\n        const that = this;\n        let delta = 200 - Math.random() * 100;\n\n        if (this.isDeleting) {\n            delta /= 2;\n        }\n\n        if (!this.isDeleting && this.txt === fullTxt) {\n            delta = this.period;\n            this.isDeleting = true;\n        } else if (this.isDeleting && this.txt === '') {\n            this.isDeleting = false;\n            this.loopNum+=1;\n            delta = 500;\n        }\n\n        setTimeout(() => that.tick(), delta);\n        }\n}\n","import React, { Component } from 'react'\nimport './Banner.css'\n\nexport default class Banner extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n        <div className=\"cell\"></div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport TxtType from './typewriter';\nimport Banner from './Banner';\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    const elements = document.getElementsByClassName('typewrite');\n    for (let i = 0; i < elements.length; i+=1) {\n      const toRotate = elements[i].getAttribute('data-type');\n      const period = elements[i].getAttribute('data-period');\n      if (toRotate) {\n        new TxtType(elements[i], JSON.parse(toRotate), period);\n      }\n    }\n    const cells = Array.from(document.querySelectorAll('.cell'))\n    const heart = document.querySelector('#heart')\n    const highlight = document.querySelector('.highlight')\n    const color = [\n      '#55efc4','#3c40c6',\n      '#74b9ff', '#a29bfe', '#00b894',\n      '#ff7675'\n    ]\n\n    const randomIndex = () => Math.round(Math.random() * 5)\n    const randomHeight = () => Math.random()*(100 - 20) + 20\n    const randomOpacity = () => Math.random()*(0.8 - 0.4) + 0.4\n\n    const randomlySetStyle = cells => {\n      const tempColor = color[randomIndex()]\n      heart.style.color = tempColor\n      highlight.style.backgroundColor = tempColor\n      cells.forEach(cell  => {\n        cell.style.backgroundColor = tempColor\n        // cell.style.backgroundColor = color[randomIndex()]\n        cell.style.height = `${randomHeight()}%`\n        cell.style.opacity = randomOpacity()\n      })\n    }\n\n    randomlySetStyle(cells)\n    window.onclick = () => randomlySetStyle(cells)\n\n    window.onmousewheel = () => randomlySetStyle(cells)\n    // window.onmousemove = e => this.handleCursor(e)\n  }\n\n  // handleCursor = e  => {\n  //   console.log(e)\n  //   const cursor = document.querySelector('#cursor');\n  //   cursor.style.top = `${e.y}px`\n  //   cursor.style.left = `${e.x}px`\n  // }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Banner />\n        {/* <div className=\"section-white-banner border-bottom-blue\" /> */}\n        <section className = \"section-header text-center\">\n          <div className=\"header-content\">\n            <div className=\"header-img padding-right\">\n              <img alt=\"profile\" className=\"home-photo-img\" src=\"./profile.jpg\" />\n            </div>\n            <div className=\"border-right\"></div>\n            <div className=\"header\">\n                <div className=\"header-name\">  I'm <span className=\"cursive\">Avinash Sivaraman</span> </div>\n                <div className=\"header-status\">I'm a Full Stack Developer</div>\n                <div className=\"header-hobby\"> I  <i className=\"fas fa-heart\" id=\"heart\"></i> <div className=\"typewrite highlight\" data-period=\"2000\" data-type='[ \"Creative Works \", \"To Design  \", \"To Develop \", \"Working on Web Perf \" ]' />\n                </div>\n            </div>\n          </div>\n          <div className=\"header-contact\">\n            <a className=\"remove-default header-contact-icon\" href=\"https://www.linkedin.com/in/avinash-sivaraman/\"><i className=\"home-icons fab fa-linkedin\"></i></a>\n            <a className=\"remove-default header-contact-icon\" href=\"https://twitter.com/AvinashSivaram\"><i className=\"home-icons fab fa-twitter-square\"></i></a>\n            <a className=\"remove-default header-contact-icon\" href=\"https://github.com/avinashsivaraman\"><i className=\"home-icons fab fa-github-square\"></i></a>\n            <button className=\"section-download-btn remove-default\" href='Resume.pdf' download='Avinash-Resume'>\n            <span className='mobile-hide'>Download</span>  Resume <i className=\"fas fa-download\"></i></button>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}